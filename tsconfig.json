{
  // node-lts-strictest-esm is deprecated in favor of using an array to combine node-lts, esm and strictest but doing so
  // currently leads to problems with the eslint-plugin-import package, see
  // https://github.com/import-js/eslint-plugin-import/issues/2751
  "extends": "@tsconfig/node-lts-strictest-esm/tsconfig.json",
  "compilerOptions": {
    // The base sets the option below to "error" leading to a depreciation warning with TS >= 5.0. To avoid the warning,
    // we set it back to its default and use the new option verbatimModuleSyntax instead.
    "importsNotUsedAsValues": "remove",
    "importHelpers": true,
    // There is no strictest config for node 14, which is why we're extending lts-strictest and set the differing
    // options (lib and target) manually. These can be found by comparing
    // https://www.npmjs.com/package/@tsconfig/node-lts-strictest-esm?activeTab=code with
    // https://www.npmjs.com/package/@tsconfig/node14?activeTab=code
    "lib": ["ES2020"],
    // https://devblogs.microsoft.com/typescript/announcing-typescript-5-2/#module-and-moduleresolution-must-match-under-recent-node-js-settings
    "module": "Node16",
    "moduleResolution": "Node16",
    "outDir": "dist",
    "sourceMap": true,
    "target": "ES2020",
    "verbatimModuleSyntax": true
  },
  "include": [
    "src/**/*"
  ]
}
